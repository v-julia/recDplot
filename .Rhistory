install.packages("roxygen2")
install.packages("roxygen2md")
library("roxygen2", lib.loc="~/R/win-library/3.6")
library("roxygen2md", lib.loc="~/R/win-library/3.6")
install.packages("recDplot")
library(hexbin)
install.packages("hexbin")
library(recDplot)
knitr::opts_chunk$set(echo = TRUE)
library(recDplot)
homedir = "D:\\GoogleDrive\\LeishmaniaViruses\\LRV2"
figdir = "D:\\GoogleDrive\\LeishmaniaViruses\\rec_fig"
setwd(homedir)
#genotype / prefix of input filename
gt="LRV2_full_aln_nogap"
#alignment for genotype
alignment = read.dna(paste(gt,"fasta",sep="."), format="fasta")
library("spider")
library("spider")
library("ape")
library("seqinr")
library("gridExtra")
library(hexbin)
library(grid)
library(ggplot2)
library(sjstats)
library(colorRamps)
#alignment for genotype
alignment = read.dna(paste(gt,"fasta",sep="."), format="fasta")
setwd(homedir)
#genotype / prefix of input filename
gt="LRV2_full_aln_nogap"
#alignment for genotype
alignment = read.dna(paste(gt,"fasta",sep="."), format="fasta")
#alignment for genotype
alignment = read.dna(paste(homedir,paste(gt,"fasta",sep="."),sep="\\"), format="fasta")
rmse_df = plot_rmse(alignment, 25, 400, "pdist", "pairwise")
rmse_df = plot_rmse(alignment, 25, 400, "pdist", "pairwise")
heatmap.2(as.matrix(rmse_df[nrow(rmse_df):1,]),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="LRV2",tracecol=NA)
library(gplots)
library(colorRamps)
heatmap.2(as.matrix(rmse_df[nrow(rmse_df):1,]),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="LRV2",tracecol=NA)
heatmap.2(as.matrix(rmse_df[nrow(rmse_df):1,]),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="LRV2",tracecol=NA)
heatmap.2(as.matrix(rmse_df[nrow(rmse_df):1,]),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="LRV2",tracecol=NA)
contr = plot_control(alignment)
c_plot = contr[[1]] + ggtitle(paste(gt,"control",sep=" "))
c_plot
c_plot = contr[[1]] + ggtitle(paste(gt,"control",sep=" ")) + stat_bin2d(binwidth = 0.02)
c_plot
c_plot = contr[[1]] + ggtitle(paste(gt,"control",sep=" ")) + stat_bin2d(binwidth = 0.005)
c_plot
#start and end positions of fragments of interest
st1 = 550
st2 = 2150
e2 = 2800
#list with pairwise distance comparison plot, distance matrices for regions st1-e1 and st2-e2
l =  plot_dist_test(alignment, st1, e1, st2, e2)
e1 = 1200
#list with pairwise distance comparison plot, distance matrices for regions st1-e1 and st2-e2
l =  plot_dist_test(alignment, st1, e1, st2, e2)
al_plot = l[[1]]+ggtitle(gt)
al_plot# + geom_smooth(method = 'lm', formula=y~x)
#distance matrices for two regions
alDistM1 = as.matrix(l[[2]])
alDistM2 = as.matrix(l[[3]])
rec_names = find_recomb_names(alDistM1,0.1, 0.2, alDistM2 ,.001, 0.05)
rec_names
write.table(rec_names, paste(figdir, gt, "-",toString(st1),"-",toString(e1),"_",toString(st2),"-",toString(e2),".txt",sep="") ,sep = "\t", quote=FALSE,row.names = FALSE,col.names = FALSE)
al_plot# + geom_smooth(method = 'lm', formula=y~x)
al_plot + geom_smooth(method = 'lm', formula=y~x)
al_plot# + geom_smooth(method = 'lm', formula=y~x)
rec_names
alDistM2 = as.matrix(l[[3]])
rec_names
al_plot# + geom_smooth(method = 'lm', formula=y~x)
#start and end positions of fragments of interest
st1 = 2150
e1 = 2500
e2 = 3000
e2 = 3000
#list with pairwise distance comparison plot, distance matrices for regions st1-e1 and st2-e2
l =  plot_dist_test(alignment, st1, e1, st2, e2)
al_plot = l[[1]]+ggtitle(gt)
al_plot# + geom_smooth(method = 'lm', formula=y~x)
rec_names = find_recomb_names(alDistM1,0.001, 0.2=1, alDistM2 ,.05, 0.1)
#distance matrices for two regions
alDistM1 = as.matrix(l[[2]])
alDistM2 = as.matrix(l[[3]])
rec_names = find_recomb_names(alDistM1,0.001, 0.1, alDistM2 ,.05, 0.1)
rec_names
#start and end positions of fragments of interest
st1 = 2150
e1 = 2800
st2 = 4000
e2 = 4600
#list with pairwise distance comparison plot, distance matrices for regions st1-e1 and st2-e2
l =  plot_dist_test(alignment, st1, e1, st2, e2)
al_plot = l[[1]]+ggtitle(gt)
al_plot# + geom_smooth(method = 'lm', formula=y~x)
e1 = 2600
#list with pairwise distance comparison plot, distance matrices for regions st1-e1 and st2-e2
l =  plot_dist_test(alignment, st1, e1, st2, e2)
al_plot = l[[1]]+ggtitle(gt)
al_plot# + geom_smooth(method = 'lm', formula=y~x)
rec_names = find_recomb_names(alDistM1,0.001, 0.1, alDistM2 ,.02, 0.1)
#distance matrices for two regions
alDistM1 = as.matrix(l[[2]])
rec_names = find_recomb_names(alDistM1,0.001, 0.1, alDistM2 ,.02, 0.1)
rec_names = find_recomb_names(alDistM1,0.0001, 0.1, alDistM2 ,.02, 0.1)
rec_names
#start and end positions of fragments of interest
st1 = 2600
st2 = 4000
e2 = 4600
al_plot = l[[1]]+ggtitle(gt)
al_plot# + geom_smooth(method = 'lm', formula=y~x)
al_plot + geom_smooth(method = 'lm', formula=y~x)
#distance matrices for two regions
rec_names = find_recomb_names(alDistM1,0.2, 0.25, alDistM2 ,0.2, 0.3)
rec_names
rec_names = find_recomb_names(alDistM1,0.0001, 0.1, alDistM2 ,.02, 0.1)
rec_names
#start and end positions of fragments of interest
st1 = 2600
#start and end positions of fragments of interest
st1 = 2600
e1 = 3000
st2 = 4000
e2 = 4600
#list with pairwise distance comparison plot, distance matrices for regions st1-e1 and st2-e2
l =  plot_dist_test(alignment, st1, e1, st2, e2)
e1 = 3000
st2 = 4000
e2 = 4600
#list with pairwise distance comparison plot, distance matrices for regions st1-e1 and st2-e2
l =  plot_dist_test(alignment, st1, e1, st2, e2)
al_plot = l[[1]]+ggtitle(gt)
al_plot + geom_smooth(method = 'lm', formula=y~x)
#distance matrices for two regions
alDistM1 = as.matrix(l[[2]])
rec_names = find_recomb_names(alDistM1,0.2, 0.3, alDistM2, 0.2, 0.3)
rec_names
rec_names = find_recomb_names(alDistM1,0.1, 0.2, alDistM2, 0.001, 0.1)
rec_names
rec_names = find_recomb_names(alDistM1,0.2, 0.3, alDistM2, 0.2, 0.3)
rec_names
