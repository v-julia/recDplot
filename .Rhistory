#library(hexbin)
library(grid)
library(gplots)
library(colorRamps)
pdf.options(encoding = 'CP1250')
fig_path = "C:/Users/alxva/Google Диск/Coronaviruses/paper/figures2/"
fig_path = "D:/DATA/Virology/Coronaviruses/paper/figures2/"
path_al = "D:/DATA/Virology/Coronaviruses/gb/"
#path_al = "C:/Users/alxva/Google Диск/Coronaviruses/gb/"
alpha_name = 'Alphacoronavirus_less_amb_1ABSEMN_aln_1.0_0.9ng — копия.fasta'
alpha = read.dna(paste(path_al, 'alpha/', alpha_name, sep=""), format="fasta", as.character=TRUE)
alpha[alpha=='-'] <- NA
gamma_name = 'Gammacoronavirus_less_amb_1ABSEMN_aln_0.7ng_0.5.fasta'
gamma_name = 'Gammacoronavirus_less_amb_1ABSEMN_aln_1.0_0.9ng — копия.fasta'
gamma = read.dna(paste(path_al, 'gamma/', gamma_name, sep=""), format="fasta", as.character=TRUE)
gamma[gamma=='-'] <- NA
l = plot_dist_test(gamma, 1, 10000, 10001, 20000)
d_matrix= l[[2]]
d_matrix
l[1]
d_matrix[1]
row.names(d_matrix)
rownames(d_matrix)
as.matrix(d_matrix)
d_matrix = as.matrix(d_matrix)
rownames(d_matrix)
grepl("asfakfef", "asf")
grepl("asfakfef", "asf", fixed=TRUE)
grepl( "asf","asfakfef", fixed=TRUE)
check_name = function(rownumber){
print(rownumber)
name = rownames(d_matrix)
if (grepl("_vaccine_", rowname, fixed=TRUE)){
return(rownumber)
}
}
apply(rownames(d_matrix), 1, check_name())
apply(rownames(d_matrix), 1, check_name(x))
apply(rownames(d_matrix), 1, check_name(rownumber))
check_name = function(x){
print(x)
name = rownames(d_matrix)[x]
if (grepl("_vaccine_", rowname, fixed=TRUE)){
return(x)
}
}
apply(rownames(d_matrix), 1, check_name(x))
apply(rownames(d_matrix), 1, fucntion(x) print(x))
apply(rownames(d_matrix), 1, function(x) print(x))
rownames(d_matrix)
apply(rownames(d_matrix), 0, function(x) print(x))
apply(rownames(d_matrix), 0, function(x) length(x))
sapply(rownames(d_matrix), 0, function(x) length(x))
sapply(rownames(d_matrix), function(x) length(x))
sapply(rownames(d_matrix), check_name(x))
check_name = function(x){
#print(x)
name = rownames(d_matrix)[x]
if (grepl("_vaccine_", rowname, fixed=TRUE)){
return(x)
}
}
sapply(rownames(d_matrix), check_name(x))
for (i in range(1:nrow(d_matrix))){
name = rownames(d_matrix)[i]
if (grepl("_vaccine_", rowname, fixed=TRUE)){
print(i)
}
}
for (i in range(1:nrow(d_matrix))){
name = rownames(d_matrix)[i]
if (grepl("_vaccine_", name, fixed=TRUE)){
print(i)
}
}
grepl("_vaccine_", "U817497_H52_NA_chicken_CHN_vaccine_NA 25326 bp", fixed=TRUE)
for (i in range(1:nrow(d_matrix))){
name = rownames(d_matrix)[i]
print(name)
if (grepl("_vaccine_", name, fixed=TRUE)){
print(i)
}
}
for (i in range(1:nrow(d_matrix))){
print(i)
name = rownames(d_matrix)[i]
print(name)
if (grepl("_vaccine_", name, fixed=TRUE)){
print(i)
}
}
nrow(d_matrix)
for (i in (1:nrow(d_matrix))){
print(i)
name = rownames(d_matrix)[i]
print(name)
if (grepl("_vaccine_", name, fixed=TRUE)){
print(i)
}
}
for (i in (1:nrow(d_matrix))){
name = rownames(d_matrix)[i]
print(name)
if (grepl("_vaccine_", name, fixed=TRUE)){
print(i)
}
}
for (i in (1:nrow(d_matrix))){
name = rownames(d_matrix)[i]
if (grepl("_vaccine_", name, fixed=TRUE)){
print(i)
}
}
ind=c()
ind=c()
for (i in (1:nrow(d_matrix))){
name = rownames(d_matrix)[i]
if (grepl("_vaccine_", name, fixed=TRUE)){
print(i)
ind = c(ind,i)
}
}
ind
d_matrix[ind]
d_matrix[ind,]
library("recDplot")
library(ggplot2)
library(reticulate)
library("ape")
library("seqinr")
library(sjstats)
library("spider")
library("gridExtra")
#library(hexbin)
library(grid)
library(gplots)
library(colorRamps)
gamma_name = 'Gammacoronavirus_less_amb_1ABSEMN_aln_0.7ng_0.5.fasta'
gamma_name = 'Gammacoronavirus_less_amb_1ABSEMN_aln_1.0_0.9ng — копия.fasta'
gamma = read.dna(paste(path_al, 'gamma/', gamma_name, sep=""), format="fasta", as.character=TRUE)
path_al = "D:/DATA/Virology/Coronaviruses/gb/"
#path_al = "C:/Users/alxva/Google Диск/Coronaviruses/gb/"
alpha_name = 'Alphacoronavirus_less_amb_1ABSEMN_aln_1.0_0.9ng — копия.fasta'
alpha = read.dna(paste(path_al, 'alpha/', alpha_name, sep=""), format="fasta", as.character=TRUE)
alpha[alpha=='-'] <- NA
pdf.options(encoding = 'CP1250')
fig_path = "C:/Users/alxva/Google Диск/Coronaviruses/paper/figures2/"
fig_path = "D:/DATA/Virology/Coronaviruses/paper/figures2/"
as.vector(d_matrix)
l = plot_dist_test(gamma, 1, 10000, 10001, 20000)
l = plot_dist_test(gamma, 1, 10000, 10001, 20000)
library("recDplot")
library(ggplot2)
library(reticulate)
library("ape")
library("seqinr")
library(sjstats)
library("spider")
library("gridExtra")
#library(hexbin)
library(grid)
library(gplots)
library(colorRamps)
gamma_name = 'Gammacoronavirus_less_amb_1ABSEMN_aln_0.7ng_0.5.fasta'
gamma_name = 'Gammacoronavirus_less_amb_1ABSEMN_aln_1.0_0.9ng — копия.fasta'
gamma = read.dna(paste(path_al, 'gamma/', gamma_name, sep=""), format="fasta", as.character=TRUE)
gamma[gamma=='-'] <- NA
l = plot_dist_test(gamma, 1, 10000, 10001, 20000)
l = plot_dist_test(gamma, 1, 10000, 10001, 20000)
d_matrix= as.matrix(l[[2]])
ind_vaccine=c()
ind_notvaccine=c()
for (i in (1:nrow(d_matrix))){
name = rownames(d_matrix)[i]
if (grepl("_vaccine_", name, fixed=TRUE)){
print(i)
ind_vaccine = c(ind_vaccine,i)
}
else {
ind_notvaccine = c(ind_notvaccine, i)
}
}
as.vector(d_matrix)
rownames(as.vector(d_matrix))
d_matrix[ind_vaccine]
d_matrix[ind_vaccine,]
View(d_matrix)
vac = d_matrix[ind_vaccine,]
View(vac)
vaccine_distances = as.vector(d_matrix[ind_vaccine,])
nonvaccine_distances = as.vector(d_matrix[ind_notvaccine,])
vaccine_distances
l[[3]]
d_matrix2= as.matrix(l[[3]])
vaccine_distances2 = as.vector(d_matrix2[ind_vaccine,])
nonvaccine_distances2 = as.vector(d_matrix2[ind_notvaccine,])
plot(vaccine_distances1,vaccine_distances2)
vaccine_distances1 = as.vector(d_matrix[ind_vaccine,])
nonvaccine_distances1 = as.vector(d_matrix[ind_notvaccine,])
plot(vaccine_distances1,vaccine_distances2)
plot(nonvaccine_distances1,nonvaccine_distances2)
plot(vaccine_distances1,vaccine_distances2, color = 'r')
length(vaccine_distances2)
v = repeat(c('vaccine'), times = length(vaccine_distances2))
v = repeat(c('vaccine') times = length(vaccine_distances2))
v = repeat(c('vaccine'), times = length(vaccine_distances2))
v = rep(c('vaccine'), times = length(vaccine_distances2))
df = data.frame(vaccine_distances1,vaccine_distances2,v)
df
df = rbind(data.frame(vaccine_distances1,vaccine_distances2,v),data.frame(nonvaccine_distances1,nonvaccine_distances2,nv))
nv = rep(c('non_vaccine'), times = length(nonvaccine_distances2))
df = rbind(data.frame(vaccine_distances1,vaccine_distances2,v),data.frame(nonvaccine_distances1,nonvaccine_distances2,nv))
data.frame(vaccine_distances1,vaccine_distances2,v, colnames=c(d1,d2,q))
data.frame(vaccine_distances1,vaccine_distances2,v, colnames=c("d1","d2","q"))
df = data.frame(vaccine_distances1,vaccine_distances2,v)
colnames(df)
colnames(df) = c('d1','d2', 'q')
df
df1 = data.frame(vaccine_distances1,vaccine_distances2,v)
df2 = data.frame(nonvaccine_distances1,nonvaccine_distances2,nv)
colnames(df1) = c('d1','d2', 'q')
colnames(df2) = c('d1','d2', 'q')
df= rbind(df1,df2)
ggplot(data.frame(df),aes(df$d1,df$d2)) + geom_point(color=df$q) +
theme(legend.justification=c(1,0), legend.position=c(1,0))+
xlab("dist1")+ylab("dist2")
ggplot(data.frame(df),aes(df$d1,df$d2), label=df$q) + geom_point() +
theme(legend.justification=c(1,0), legend.position=c(1,0))+
xlab("dist1")+ylab("dist2")
ggplot(data.frame(df),aes(df$d1,df$d2), label=df$q) + geom_point(aes(color=q)) +
theme(legend.justification=c(1,0), legend.position=c(1,0))+
xlab("dist1")+ylab("dist2")
df= rbind(df2,df1)
ggplot(data.frame(df),aes(df$d1,df$d2), label=df$q) + geom_point(aes(color=q)) +
theme(legend.justification=c(1,0), legend.position=c(1,0))+
xlab("dist1")+ylab("dist2")
knitr::opts_chunk$set(echo = TRUE)
library(crosstalk)
library(DT)
library("recDplot")
fig_path = 'J:/GoogleDrive(julie.vakulenko)/Sapovirus_evolution_Artem/norovirus/alignments/'
path_to_al = 'J:/GoogleDrive(julie.vakulenko)/Sapovirus_evolution_Artem/norovirus/alignments/'
noro_name = 'norovirus_full_aln_100gp_0.5_genotyped.fasta'
noro = read.dna(paste(path_to_al, noro_name, sep=""), format="fasta")
# ВОТ ОНА, ТА САМАЯ СТРОЧКА
noro[noro=='-'] <- NA
l = get_distances(noro, 6688,7060,7061,7431)
library(spaa)
l = get_distances(noro, 6688,7060,7061,7431)
l[[2]]
d <- highlight_key(l[[2]])
library(DT)
library(crosstalk)
d <- highlight_key(l[[2]])
library(plotly)
d <- highlight_key(l[[2]])
a <- ggplotly(ggplot(data = d, aes(x = Dist1, y = Dist2)) +stat_bin2d(binwidth = 0.002)+
scale_fill_gradientn(colours=c("blue","red"))+ theme(legend.justification=c(1,0), legend.position=c(1,0))+
xlab(paste(toString(6688),toString(7060),sep=":"))+ylab(paste(toString(7061),toString(7431),sep=":"))) %>%
highlight("plotly_selected", dynamic = TRUE)
options(persistent = TRUE)
p <- datatable(d)
bscols(widths = c(6, 4), a, p)
d <- highlight_key(l[[2]])
l[[2]]
l[[2]][:250]
l[[2]][1:250]
l[[2]][,1:250]
l[[2]][1:250,:]
l[[2]][1:250,]
d <- highlight_key(l[[2]][1:250,])
a <- ggplotly(ggplot(data = d, aes(x = Dist1, y = Dist2)) +stat_bin2d(binwidth = 0.002)+
scale_fill_gradientn(colours=c("blue","red"))+ theme(legend.justification=c(1,0), legend.position=c(1,0))+
xlab(paste(toString(6688),toString(7060),sep=":"))+ylab(paste(toString(7061),toString(7431),sep=":"))) %>%
highlight("plotly_selected", dynamic = TRUE)
options(persistent = TRUE)
p <- datatable(d)
bscols(widths = c(6, 4), a, p)
d <- highlight_unit(l[[2]][1:250,])
key
d <- highlight_key(l[[2]][1:250,])
a <- ggplotly(ggplot(data = d, aes(x = Dist1, y = Dist2)) +stat_bin2d(binwidth = 0.002)+
scale_fill_gradientn(colours=c("blue","red"))+ theme(legend.justification=c(1,0), legend.position=c(1,0))+
xlab(paste(toString(6688),toString(7060),sep=":"))+ylab(paste(toString(7061),toString(7431),sep=":"))) %>%
highlight("plotly_selected", dynamic = TRUE)
options(persistent = TRUE)
p <- datatable(d)
bscols(widths = c(6, 4), a, p)
install.packages("plotly")
a = l[[2]]
l[2]
l[[2]]
l[2]
a = as.matrix(l[2])
View(a)
a = as.matrix(l[[2]])
View(a)
knitr::opts_chunk$set(echo = TRUE)
library("recDplot")
library(ggplot2)
library(reticulate)
library("ape")
library("seqinr")
library(sjstats)
library("spider")
library("gridExtra")
#library(hexbin)
library(grid)
library(gplots)
library(colorRamps)
#library(dplyr)
library(stringr)
library(plotly)
library(spaa)
fig_path = 'J:/GoogleDrive(julie.vakulenko)/Sapovirus_evolution_Artem/norovirus/alignments/'
path_to_al = 'J:/GoogleDrive(julie.vakulenko)/Sapovirus_evolution_Artem/norovirus/alignments/'
noro_name = 'norovirus_full_aln_100gp_0.5_genotyped.fasta'
noro = read.dna(paste(path_to_al, noro_name, sep=""), format="fasta", as.character=TRUE)
# ВОТ ОНА, ТА САМАЯ СТРОЧКА
noro[noro=='-'] <- NA
l = plot_dist_test(noro, 6688,7060,7061,7431)
l[[1]]
ggplotly(l[[1]])
df = find_recomb_names(as.matrix(l[[2]]), 0.43, 0.6, as.matrix(l[[3]]), 0.45, 0.55)
df
as.matrix(l[[2]])
a = as.matrix(l[[2]])
View(a)
a = as.matrix(l[2])
View(a)
a
View(a)
View(a)
a
l[2]
View(l)
library("recDplot")
library(ggplot2)
library(reticulate)
library("ape")
library("seqinr")
library(sjstats)
library("spider")
library("gridExtra")
#library(hexbin)
library(grid)
library(gplots)
library(colorRamps)
fig_path = "J:/Virology/RNA_viruses/Lagovirus/figures/"
path_al = "J:/Virology/RNA_viruses/Lagovirus/"
lago_name = 'Lagovirus_full_aln_0.5_less_amb.fasta'
lago = read.dna(paste(path_al, lago_name, sep=""), format="fasta", as.character=TRUE)
lago[lago=='-'] <- NA
lago_rmse = plot_rmse(lago, 50, 400,"pdist","pairwise")
heatmap.2(as.matrix(lago_rmse),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="Lagovirus(window=800,step=100)",tracecol=NA)
View(lago)
dna_object = lago
step = 50
window = 400
method = "pdist"
modification = "pairwise"
length_aln = length(dna_object[1,]) #length of alignment
num_seq = length(dna_object[,1]) # number of sequences in alignment
starts = seq(from=0, to=length_aln-window, by = step) # start positions of genomic regions
starts[1]=1
ends = seq(from=window, to = length_aln, by = step) # end positions of genomic regions
if (length_aln%%step>step){ends=c(ends,length_aln)}
df_intervals = cbind(starts,ends) #intervals
View(df_intervals)
#dataframe to store RMSE values of each comparison
rmse_df = data.frame(matrix(ncol=length(starts), nrow = length(starts)))
colnames(rmse_df)=starts
rownames(rmse_df)=starts
#list of distance matrices for each pair of genomic regions
dist_matrices = list()
for (i in 1:nrow(df_intervals)){
cat("\r", "Calculating distances in interval", i)
slice = dna_object[1:num_seq, seq(from = df_intervals[i,"starts"], to = df_intervals[i,"ends"], by=1)]
#dist_matrices[[i]] = dist.dna(slice,  as.matrix = TRUE,  model = "JC69")
if (method == "pdist"){
if (modification=="pairwise"){
dist_matrices[[i]] = dist.gene(slice, method = "percentage",  pairwise.deletion = TRUE)}
else {
dist_matrices[[i]] = dist.gene(slice, method = "percentage",  pairwise.deletion = FALSE)}
}
else {
if (method == "JC"){dist_matrices[[i]] = dist.dna(slice,  as.matrix = TRUE,  model = "JC69")}
if (method == "Kimura"){dist_matrices[[i]] = dist.dna(slice,  as.matrix = TRUE,  model = "K80")}
if (method == "TN"){dist_matrices[[i]] = dist.dna(slice,  as.matrix = TRUE,  model = "K80")}
#else{print("Unknown method")}
}
}
n = nrow(df_intervals)
print(length(dist_matrices))
for (i in 1:n){
cat("\r", "Calculating rmse in row", i)
for (j in i:n){
#for (j in 1:(n)){
#print(paste(toString(i), toString(j), sep=","))
#fits pairwise distance comparison plots linear model, calculates rmse
rmse_i_j = (rmse(lm(dist_matrices[[j]]~dist_matrices[[i]])) + rmse(lm(dist_matrices[[i]]~dist_matrices[[j]]))) /2.0
#rmse_i_j = rmse(lm(dist_matrices[[j]]~dist_matrices[[i]]))
rmse_df[i,j] = rmse_i_j
rmse_df[j,i] = rmse_i_j
}
}
lm(dist_matrices[[j]]~dist_matrices[[i]])
i
j
dist_matrices[[j]]
m1 = dist_matrices[[j]]
m2 = dist_matrices[[j]]
lm(dist_matrices[[j]]~dist_matrices[[i]]))
lm(dist_matrices[[j]]~dist_matrices[[i]])
library("recDplot")
install.packages("spaa")
library("recDplot")
library(ggplot2)
library(reticulate)
library("ape")
library("seqinr")
library(sjstats)
library("spider")
library("gridExtra")
#library(hexbin)
library(grid)
library(gplots)
library(colorRamps)
fig_path = "J:/Virology/RNA_viruses/Lagovirus/figures/"
path_al = "J:/Virology/RNA_viruses/Lagovirus/"
lago_name = 'Lagovirus_full_aln_0.5_less_amb.fasta'
lago = read.dna(paste(path_al, lago_name, sep=""), format="fasta", as.character=TRUE)
lago[lago=='-'] <- NA
dna_object = lago
step = 50
window = 400
method = "pdist"
modification = "pairwise"
length_aln = length(dna_object[1,]) #length of alignment
num_seq = length(dna_object[,1]) # number of sequences in alignment
starts = seq(from=0, to=length_aln-window, by = step) # start positions of genomic regions
starts[1]=1
ends = seq(from=window, to = length_aln, by = step) # end positions of genomic regions
if (length_aln%%step>step){ends=c(ends,length_aln)}
df_intervals = cbind(starts,ends) #intervals
#dataframe to store RMSE values of each comparison
rmse_df = data.frame(matrix(ncol=length(starts), nrow = length(starts)))
colnames(rmse_df)=starts
rownames(rmse_df)=starts
cat("Total number of intervals", nrow(df_intervals))
#list of distance matrices for each pair of genomic regions
dist_matrices = list()
for (i in 1:nrow(df_intervals)){
cat("\r", "Calculating distances in interval", i)
slice = dna_object[1:num_seq, seq(from = df_intervals[i,"starts"], to = df_intervals[i,"ends"], by=1)]
#dist_matrices[[i]] = dist.dna(slice,  as.matrix = TRUE,  model = "JC69")
if (method == "pdist"){
if (modification=="pairwise"){
dist_matrices[[i]] = dist.gene(slice, method = "percentage",  pairwise.deletion = TRUE)}
else {
dist_matrices[[i]] = dist.gene(slice, method = "percentage",  pairwise.deletion = FALSE)}
}
else {
if (method == "JC"){dist_matrices[[i]] = dist.dna(slice,  as.matrix = TRUE,  model = "JC69")}
if (method == "Kimura"){dist_matrices[[i]] = dist.dna(slice,  as.matrix = TRUE,  model = "K80")}
if (method == "TN"){dist_matrices[[i]] = dist.dna(slice,  as.matrix = TRUE,  model = "K80")}
#else{print("Unknown method")}
}
}
n = nrow(df_intervals)
print(length(dist_matrices))
for (i in 1:n){
cat("\r", "Calculating rmse in row", i)
for (j in i:n){
#for (j in 1:(n)){
#print(paste(toString(i), toString(j), sep=","))
#fits pairwise distance comparison plots linear model, calculates rmse
rmse_i_j = (rmse(lm(dist_matrices[[j]]~dist_matrices[[i]])) + rmse(lm(dist_matrices[[i]]~dist_matrices[[j]]))) /2.0
#rmse_i_j = rmse(lm(dist_matrices[[j]]~dist_matrices[[i]]))
rmse_df[i,j] = rmse_i_j
rmse_df[j,i] = rmse_i_j
}
}
lago_rmse = plot_rmse(lago, 50, 400,"pdist","pairwise")
heatmap.2(as.matrix(lago_rmse),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="Lagovirus(window=800,step=100)",tracecol=NA)
svg(file=paste(fig_path, "lago_rmse_800-100.svg", sep=""))
heatmap.2(as.matrix(lago_rmse),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="Lagovirus(window=800,step=100),",tracecol=NA)
dev.off()
heatmap.2(as.matrix(lago_rmse),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="Lagovirus(window=800,step=100),",tracecol=NA)
svg(file=paste(fig_path, "lago_rmse_800-100.svg", sep=""))
heatmap.2(as.matrix(lago_rmse[nrow(lago_rmse):1,]),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="Lagovirus(window=800,step=100),",tracecol=NA)
dev.off()
heatmap.2(as.matrix(lago_rmse[nrow(lago_rmse):1,]),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="Lagovirus(window=800,step=100)",tracecol=NA)
svg(file=paste(fig_path, "lago_rmse_800-100.svg", sep=""))
heatmap.2(as.matrix(lago_rmse[nrow(lago_rmse):1,]),Rowv = FALSE, Colv = "Rowv", dendrogram = 'none',col=matlab.like, main="Lagovirus(window=800,step=100),",tracecol=NA)
dev.off()
l = plot_dist_test(lago, 1,5298,5299,7401)
l[[1]]
l = plot_dist_test(lago, 1,7044,7045,7401)
l[[1]]
l = plot_dist_test(lago, 1,5298,5299,7401)
l[[1]]
l = plot_dist_test(lago, 5299,7044,7045,7401)
l[[1]]
l = plot_dist_test(lago, 1,2649,2650,5298)
l[[1]]
l = plot_dist_test(lago, 3757,4527,4528,5298)
l[[1]]
l = plot_dist_test(lago, 3757,4527,4528,5298)
l[[1]]
l = plot_dist_test(lago, 5299,6171,6172,7044)
l[[1]]
